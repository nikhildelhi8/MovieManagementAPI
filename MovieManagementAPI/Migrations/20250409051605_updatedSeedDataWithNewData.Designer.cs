// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieManagementAPI.DbContext;

#nullable disable

namespace MovieManagementAPI.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250409051605_updatedSeedDataWithNewData")]
    partial class updatedSeedDataWithNewData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("MovieManagementAPI.Entities.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Casts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Joseph Gordon-Levitt"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sam Neill"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Laura Dern"
                        },
                        new
                        {
                            Id = 5,
                            Name = "John Travolta"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Uma Thurman"
                        });
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1946, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1963, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Quentin Tarantino"
                        });
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = 1,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = 2,
                            Title = "Jurassic Park"
                        },
                        new
                        {
                            Id = 3,
                            DirectorId = 3,
                            Title = "Pulp Fiction"
                        });
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.MovieCast", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CastId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId", "CastId");

                    b.HasIndex("CastId");

                    b.ToTable("MovieCasts");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CastId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            CastId = 2
                        },
                        new
                        {
                            MovieId = 2,
                            CastId = 3
                        },
                        new
                        {
                            MovieId = 2,
                            CastId = 4
                        },
                        new
                        {
                            MovieId = 3,
                            CastId = 5
                        },
                        new
                        {
                            MovieId = 3,
                            CastId = 6
                        });
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.MovieDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId")
                        .IsUnique();

                    b.ToTable("MovieDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Sci-Fi",
                            MovieId = 1,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Adventure",
                            MovieId = 2,
                            ReleaseDate = new DateTime(1993, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Crime",
                            MovieId = 3,
                            ReleaseDate = new DateTime(1994, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.Movie", b =>
                {
                    b.HasOne("MovieManagementAPI.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.MovieCast", b =>
                {
                    b.HasOne("MovieManagementAPI.Entities.Cast", "Cast")
                        .WithMany("movieCast")
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieManagementAPI.Entities.Movie", "Movie")
                        .WithMany("movieCast")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cast");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.MovieDetails", b =>
                {
                    b.HasOne("MovieManagementAPI.Entities.Movie", "Movie")
                        .WithOne("Detail")
                        .HasForeignKey("MovieManagementAPI.Entities.MovieDetails", "MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.Cast", b =>
                {
                    b.Navigation("movieCast");
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MovieManagementAPI.Entities.Movie", b =>
                {
                    b.Navigation("Detail")
                        .IsRequired();

                    b.Navigation("movieCast");
                });
#pragma warning restore 612, 618
        }
    }
}
